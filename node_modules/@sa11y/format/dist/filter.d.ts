import { AxeResults, ExceptionList } from '@sa11y/common';
/**
 * Filter a11y violations from axe based on given {@link ExceptionList}
 * @param violations - List of violations found with axe
 * @param exceptionList - {@link ExceptionList} of map of rule to corresponding css targets that needs to be filtered from a11y results
 */
export declare function exceptionListFilter(violations: AxeResults, exceptionList?: ExceptionList): AxeResults;
/**
 * Filter a11y violations from axe based on given selectors filter keywords
 * @param violations - List of violations found with axe
 * @param selectorFilterKeywords - List of selector keywords to filter violations for
 */
export declare function exceptionListFilterSelectorKeywords(violations: AxeResults, selectorFilterKeywords: string[]): AxeResults;
//# sourceMappingURL=filter.d.ts.map