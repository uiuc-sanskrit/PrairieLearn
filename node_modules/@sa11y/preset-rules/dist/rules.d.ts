import { A11yConfig } from '@sa11y/common';
export type WcagVersion = '2.0' | '2.1' | undefined;
export declare const wcagLevels: string[];
export type WcagLevel = (typeof wcagLevels)[number];
export declare const priorities: readonly ["P1", "P2", "P3", ""];
export type Priority = (typeof priorities)[number];
export declare const defaultPriority: Priority;
export declare const defaultWcagVersion: WcagVersion;
/**
 * Metadata about rules such as Priority and WCAG SC (overriding values from axe tags)
 */
export type RuleMetadata = {
    priority: Priority;
    wcagSC: string;
    wcagLevel: WcagLevel;
};
/**
 * Map of rule IDs to RuleMetadata for convenient lookups of metadata based on rule id
 */
export type RuleInfo = Map<string, // Rule ID
RuleMetadata>;
/**
 * Get Priority filter for the default ruleset.
 * When set, only the rules matching the given priority from the default ruleset will be
 * used for the sa11y API and automatic checks.
 */
export declare function getPriorityFilter(): Priority;
/**
 * Filter given rules and return those matching given priority or .
 */
export declare function filterRulesByPriority(rules: RuleInfo, priority?: Priority): string[];
/**
 * Returns config to be used in axe.run() with given rules
 * Ref: https://github.com/dequelabs/axe-core/blob/develop/doc/API.md#options-parameter
 * @param rules - List of rules to be used in the config
 * @returns A11yConfig with formatted rules
 */
export declare function getA11yConfig(rules: RuleInfo): A11yConfig;
//# sourceMappingURL=rules.d.ts.map