{"version":3,"file":"instrument.js","sources":["../../../src/otel/instrument.ts"],"sourcesContent":["import type { Instrumentation } from '@opentelemetry/instrumentation';\nimport { addOpenTelemetryInstrumentation } from '@sentry/opentelemetry';\n\nconst INSTRUMENTED: Record<string, Instrumentation> = {};\n\n/**\n * Instrument an OpenTelemetry instrumentation once.\n * This will skip running instrumentation again if it was already instrumented.\n */\nexport function generateInstrumentOnce<Options = unknown>(\n  name: string,\n  creator: (options?: Options) => Instrumentation,\n): ((options?: Options) => void) & { id: string } {\n  return Object.assign(\n    (options?: Options) => {\n      const instrumented = INSTRUMENTED[name];\n      if (instrumented) {\n        // If options are provided, ensure we update them\n        if (options) {\n          instrumented.setConfig(options);\n        }\n        return;\n      }\n\n      const instrumentation = creator(options);\n      INSTRUMENTED[name] = instrumentation;\n\n      addOpenTelemetryInstrumentation(instrumentation);\n    },\n    { id: name },\n  );\n}\n"],"names":["addOpenTelemetryInstrumentation"],"mappings":";;;;AAGA,MAAM,YAAY,GAAoC,EAAE,CAAA;AACxD;AACA;AACA;AACA;AACA;AACO,SAAS,sBAAsB;AACtC,EAAE,IAAI;AACN,EAAE,OAAO;AACT,EAAkD;AAClD,EAAE,OAAO,MAAM,CAAC,MAAM;AACtB,IAAI,CAAC,OAAO,KAAe;AAC3B,MAAM,MAAM,YAAa,GAAE,YAAY,CAAC,IAAI,CAAC,CAAA;AAC7C,MAAM,IAAI,YAAY,EAAE;AACxB;AACA,QAAQ,IAAI,OAAO,EAAE;AACrB,UAAU,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;AACzC,SAAQ;AACR,QAAQ,OAAM;AACd,OAAM;AACN;AACA,MAAM,MAAM,eAAgB,GAAE,OAAO,CAAC,OAAO,CAAC,CAAA;AAC9C,MAAM,YAAY,CAAC,IAAI,CAAA,GAAI,eAAe,CAAA;AAC1C;AACA,MAAMA,6CAA+B,CAAC,eAAe,CAAC,CAAA;AACtD,KAAK;AACL,IAAI,EAAE,EAAE,EAAE,IAAA,EAAM;AAChB,GAAG,CAAA;AACH;;;;"}